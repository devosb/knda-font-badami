languagesystem DFLT dflt;
languagesystem knd2 dflt;

# Also in GDL
@Cons = [@cno_sub ra]; # @Akhands
@SubCons = [@c_sub ra.below];

@AtomicVowels = [aamatra imatra umatra uumatra rvocalicmatra rrvocalicmatra ematra aumatra];


# GSUB

# For debugging the string "RenderingUnknown" will be rendered as "RenderingOpenType"
# if the app is using OpenType to render the text.
lookup FontCheck_Unknow {
  lookupflag IgnoreMarks;
    sub [U n k o w ] by [O p e T y];
} FontCheck_Unknow;

lookup FontCheck_n {
  lookupflag IgnoreMarks;
    sub n by p e;
} FontCheck_n;

lookup FontCheck {
  lookupflag IgnoreMarks;
    sub [R] e n d e r i n g
      U' lookup FontCheck_Unknow
      n' lookup FontCheck_Unknow
      k' lookup FontCheck_Unknow
      n'
      o' lookup FontCheck_Unknow
      w' lookup FontCheck_Unknow
      n' lookup FontCheck_n;
} FontCheck;

lookup Akhands {
  lookupflag IgnoreMarks;
    sub ka virama ssa by ka_ssa;
    sub ja virama nya by ja_nya;
} Akhands;

#lookup SpecialRa {
#  lookupflag 0;
#    sub virama ra by ra.below;
#} SpecialRa;

lookup RephForm {
  lookupflag 0;
    sub ra virama by shortrr;
} RephForm;

lookup BelowFormOfCons {
  lookupflag 0;
    sub virama @Cons by @SubCons;
} BelowFormOfCons;

lookup PreBaseSub {
  lookupflag 0;
    # some consonants have a multiple base forms (.noEbase and .regbase)
    sub @cno_noEbase' @MatraToBase by @c_noEbase;
    sub @cno_regbase' ematra uumatra by @c_regbase;

    # vowel signs AA, AU and haln
    sub @cno_base' @MatraToBase by @c_base;

    # vowel sign and parts with E (but not for the multiple base consonants)
    sub @cno_base' ematra by @c_base;
} PreBaseSub;

lookup LargeEmatra {
  lookupflag 0;
    sub @TakesLargeEmatra ematra' by ematra.large;
} LargeEmatra;

lookup ImatraLigature {
  lookupflag 0;
    sub @cno_imathra imatra by @c_imathra;
} ImatraLigature;

lookup BelowBaseSubForRa {
  lookupflag 0;
    ignore sub ra.below ailengthmark' shortrr';
    # undo reph formation in the following case
    sub ailengthmark' shortrr' by ra_ailengthmark.below;
} BelowBaseSubForRa;

lookup BelowBaseSub {
  lookupflag 0;
    # general ligatures
    sub ta.sub ya.sub by ta_ya.below;
    sub ta.sub va.sub by ta_va.below;
  	sub ka.sub rvocalicmatra by ka_rvocalicmatra.below;
	  sub ta.sub rvocalicmatra by ta_rvocalicmatra.below;
    sub ta.sub ailengthmark by ta_ailengthmark.below;
    sub ra.below ailengthmark by ra_ailengthmark.below;
    sub sha.imathra ra.below by sha_ra.imathra;
} BelowBaseSub;

lookup Reph2RaSub {
  lookupflag 0;
    sub shortrr by ra.below;
} Reph2RaSub;

lookup MoreRaSub {
  lookupflag IgnoreMarks;
    # undo reph formation in some cases
    @RaLike = [ra ra.imathra ra.base @AtomicVowels];
    ignore sub ra.below @RaLike shortrr';
    sub @RaLike shortrr' lookup Reph2RaSub;
} MoreRaSub;

lookup Length2RaSub {
  lookupflag 0;
    sub lengthmark by ra.below;
} Length2RaSub;

lookup RaSub2Length {
  lookupflag 0;
    sub ra.below by lengthmark;
} RaSub2Length;

lookup SwapLengthAndRaSub {
  lookupflag 0;
    sub lengthmark' lookup Length2RaSub ra.below' lookup RaSub2Length;
} SwapLengthAndRaSub;

lookup PostBaseSub {
  lookupflag 0;
    sub @TakesUnderUMatra umatra' by umatra.large;
    sub @TakesUnderUMatra uumatra' by uumatra.large;
    sub @TakesUnderUMatra ematra uumatra' by uumatra.large;

    # special handling of ra sub forms
    sub @SubCons ra.below' by ra.below.subcons;
    sub @Akhands ra.below' by ra.below.subcons;
    sub @TakesLargeRaSubCons ra.below' by ra.below.large;
    sub ra ra.below' by ra.below.ra;
    sub ra.imathra ra.below' by ra.below.ra;
    sub @AtomicVowels ra.below' by ra.below.ra;
} PostBaseSub;

lookup HalantForms {
  lookupflag IgnoreMarks;
    sub @cno_virama' virama' by @c_virama;
    # sub @cno_virama' ra.below virama' by @c_virama;
    # sub @cno_virama' ra.below.subcons virama' by @c_virama;
} HalantForms;

feature ccmp {
    lookup FontCheck;
} ccmp;

feature akhn {
    lookup Akhands;
    # lookup SpecialRa;
} akhn;

feature rphf {
  lookup RephForm;
} rphf;

feature blwf {
  lookup BelowFormOfCons;
} blwf;

feature pres {
    lookup PreBaseSub;
} pres;

feature abvs {
    lookup LargeEmatra;
    lookup ImatraLigature;
} abvs;

feature blws {
    lookup BelowBaseSubForRa;
    lookup BelowBaseSub;
} blws;

feature psts {
    lookup MoreRaSub;
    lookup SwapLengthAndRaSub;
    lookup PostBaseSub;
} psts;

feature haln {
    lookup HalantForms;
} haln;


# GPOS

lookup RightSubMove {
  lookupflag 0;
    pos \rvocalicmatra <50 0 0 0>;
    pos \rrvocalicmatra <50 0 0 0>;
    pos \ailengthmark <50 0 0 0>;
} RightSubMove;

lookup SubMove {
  lookupflag 0;
    pos \ka.sub <-100 0 0 0>;
    pos \kha.sub <-100 0 0 0>;
    pos \ga.sub <-100 0 0 0>;
    pos \gha.sub <-100 0 0 0>;
    pos \nga.sub <-100 0 0 0>;
    pos \ca.sub <-100 0 0 0>;
    pos \cha.sub <-100 0 0 0>;
    pos \ja.sub <-100 0 0 0>;
    pos \jha.sub <-100 0 0 0>;
    pos \nya.sub <-100 0 0 0>;
    pos \tta.sub <-100 0 0 0>;
    pos \ttha.sub <-100 0 0 0>;
    pos \dda.sub <-100 0 0 0>;
    pos \ddha.sub <-100 0 0 0>;
    pos \nna.sub <-100 0 0 0>;
    pos \ta.sub <-100 0 0 0>;
    pos \tha.sub <-100 0 0 0>;
    pos \da.sub <-100 0 0 0>;
    pos \dha.sub <-100 0 0 0>;
    pos \na.sub <-100 0 0 0>;
    pos \pa.sub <-100 0 0 0>;
    pos \pha.sub <-100 0 0 0>;
    pos \ba.sub <-100 0 0 0>;
    pos \bha.sub <-100 0 0 0>;
    pos \ma.sub <-100 0 0 0>;
    pos \ya.sub <-150 0 0 0>;
    pos \ra.below.ra <-100 0 0 0>;
    pos \rra.sub <-100 0 0 0>;
    pos \la.sub <-100 0 0 0>;
    pos \lla.sub <-100 0 0 0>;
    pos \va.sub <-100 0 0 0>;
    pos \sha.sub <-100 0 0 0>;
    pos \ssa.sub <-150 75 0 0>;
    pos \sa.sub <-100 0 0 0>;
    pos \ha.sub <-100 0 0 0>;
} SubMove;

lookup blwmBelowBaseMarkinKannadalookup2 {
  lookupflag 0;
    @cc35_match_1 = [\ka.sub \kha.sub \ga.sub \gha.sub \nga.sub \ca.sub \cha.sub
	\ja.sub \jha.sub \nya.sub \tta.sub \ttha.sub \dda.sub
	\ddha.sub \nna.sub \ta.sub \tha.sub \da.sub \dha.sub
	\na.sub \pa.sub \pha.sub \ba.sub \bha.sub \ma.sub
	\ya.sub \rra.sub \la.sub \lla.sub \va.sub \sha.sub
	\ssa.sub \sa.sub \ha.sub \ra.below.ra ];
    @cc35_match_2 = [\rrvocalicmatra \rvocalicmatra \ailengthmark ];
    @cc35_ahead_1 = [\ka.sub \kha.sub \ga.sub \gha.sub \nga.sub \ca.sub \cha.sub
	\ja.sub \jha.sub \nya.sub \tta.sub \ttha.sub \dda.sub
	\ddha.sub \nna.sub \ta.sub \tha.sub \da.sub \dha.sub
	\na.sub \pa.sub \pha.sub \ba.sub \bha.sub \ma.sub
	\ya.sub \rra.sub \la.sub \lla.sub \va.sub \sha.sub
	\ssa.sub \sa.sub \ha.sub \ra.below.ra ];
    @cc35_ahead_2 = [\rrvocalicmatra \rvocalicmatra \ailengthmark ];
    pos @cc35_match_1'lookup SubMove  @cc35_ahead_2 ;
} blwmBelowBaseMarkinKannadalookup2;

lookup blwmBelowBaseMarkinKannadalookup4 {
  lookupflag 0;
    @cc36_match_1 = [\rrvocalicmatra \rvocalicmatra \ailengthmark ];
    @cc36_back_1 = [\rrvocalicmatra \rvocalicmatra \ailengthmark ];
    @cc36_back_2 = [\ka.sub \kha.sub \ga.sub \gha.sub \nga.sub \ca.sub \cha.sub
	\ja.sub \jha.sub \nya.sub \tta.sub \ttha.sub \dda.sub
	\ddha.sub \nna.sub \ta.sub \tha.sub \da.sub \dha.sub
	\na.sub \pa.sub \pha.sub \ba.sub \bha.sub \ma.sub
	\ya.sub \rra.sub \la.sub \lla.sub \va.sub \sha.sub
	\ssa.sub \sa.sub \ha.sub \ra.below.ra ];
    pos @cc36_back_2 @cc36_match_1'lookup RightSubMove  ;
} blwmBelowBaseMarkinKannadalookup4;

lookup EMatras {
  lookupflag 0;
    pos base @V mark @_V;
} EMatras;

lookup Nuktas {
  lookupflag 0;
    pos base @N mark @_N;
} Nuktas;

lookup SubForms {
  lookupflag 0;
    pos base @S mark @_S;
} SubForms;

lookup SubSubForms {
  lookupflag 0;
    pos mark @S_MarkBase mark @_S;
} SubSubForms;

feature abvm {
    lookup EMatras;
} abvm;

feature blwm {
    lookup Nuktas;
    lookup SubForms;
    lookup SubSubForms;
      # lookup RightSubMove;
      lookup blwmBelowBaseMarkinKannadalookup2;
      lookup blwmBelowBaseMarkinKannadalookup4;
} blwm;

# GDEF

table GDEF {
  GlyphClassDef @GDEF_bases, , @GDEF_marks, ;

  LigatureCaretByPos \da 726;
} GDEF;
